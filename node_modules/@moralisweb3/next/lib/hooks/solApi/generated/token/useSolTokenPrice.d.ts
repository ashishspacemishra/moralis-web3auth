import { GetTokenPriceRequest } from 'moralis/common-sol-utils';
import { FetchParams } from '../../../types';
export declare const useSolTokenPrice: (request?: GetTokenPriceRequest, fetchParams?: FetchParams) => {
    data: {
        nativePrice: {
            value: import("moralis/common-sol-utils").SolNative;
            decimals: number;
            name: string;
            symbol: string;
        };
        usdPrice: number;
        exchangeAddress: import("moralis/common-sol-utils").SolAddress;
        exchangeName: string;
    } | undefined;
    error: any;
    fetch: (params?: GetTokenPriceRequest | undefined) => Promise<{
        nativePrice: {
            value: import("moralis/common-sol-utils").SolNative;
            decimals: number;
            name: string;
            symbol: string;
        };
        usdPrice: number;
        exchangeAddress: import("moralis/common-sol-utils").SolAddress;
        exchangeName: string;
    } | undefined>;
    /**
     * @deprecated use `fetch()` instead
     */
    refetch: () => Promise<{
        nativePrice: {
            value: import("moralis/common-sol-utils").SolNative;
            decimals: number;
            name: string;
            symbol: string;
        };
        usdPrice: number;
        exchangeAddress: import("moralis/common-sol-utils").SolAddress;
        exchangeName: string;
    } | undefined>;
    isFetching: boolean;
    /**
     * @deprecated use `isFetching` instead
     */
    isValidating: boolean;
};
//# sourceMappingURL=useSolTokenPrice.d.ts.map