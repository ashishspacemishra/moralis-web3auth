import { GetPortfolioRequest } from 'moralis/common-sol-utils';
import { FetchParams } from '../../../types';
export declare const useSolPortfolio: (request?: GetPortfolioRequest, fetchParams?: FetchParams) => {
    data: {
        nativeBalance: import("moralis/common-sol-utils").SolNative;
        nfts: {
            associatedTokenAddress: import("moralis/common-sol-utils").SolAddress;
            mint: import("moralis/common-sol-utils").SolAddress;
        }[];
        tokens: {
            associatedTokenAddress: import("moralis/common-sol-utils").SolAddress;
            mint: import("moralis/common-sol-utils").SolAddress;
            amount: import("moralis/common-sol-utils").SolNative;
        }[];
    } | undefined;
    error: any;
    fetch: (params?: GetPortfolioRequest | undefined) => Promise<{
        nativeBalance: import("moralis/common-sol-utils").SolNative;
        nfts: {
            associatedTokenAddress: import("moralis/common-sol-utils").SolAddress;
            mint: import("moralis/common-sol-utils").SolAddress;
        }[];
        tokens: {
            associatedTokenAddress: import("moralis/common-sol-utils").SolAddress;
            mint: import("moralis/common-sol-utils").SolAddress;
            amount: import("moralis/common-sol-utils").SolNative;
        }[];
    } | undefined>;
    /**
     * @deprecated use `fetch()` instead
     */
    refetch: () => Promise<{
        nativeBalance: import("moralis/common-sol-utils").SolNative;
        nfts: {
            associatedTokenAddress: import("moralis/common-sol-utils").SolAddress;
            mint: import("moralis/common-sol-utils").SolAddress;
        }[];
        tokens: {
            associatedTokenAddress: import("moralis/common-sol-utils").SolAddress;
            mint: import("moralis/common-sol-utils").SolAddress;
            amount: import("moralis/common-sol-utils").SolNative;
        }[];
    } | undefined>;
    isFetching: boolean;
    /**
     * @deprecated use `isFetching` instead
     */
    isValidating: boolean;
};
//# sourceMappingURL=useSolPortfolio.d.ts.map